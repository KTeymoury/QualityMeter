"""
Here we will use the properties generated by the properties to measure understandability.
"""

from qualitymeter.properties.coupling import Coupling
from qualitymeter.properties.cohesion import Cohesion
from qualitymeter.properties.designSize import DesignSize
from qualitymeter.properties.abstraction import Abstraction
from qualitymeter.properties.encapsulation import Encapsulation

from .quality_attribute import QualityAttribute


class Understandability(QualityAttribute):
    def __init__(self, stream):
        QualityAttribute.__init__(self, stream)

    def calc_coupling(self):
        listener = Coupling(self.common_listener.classes_name)
        self.walker.walk(listener, self.parse_tree)
        return sum(listener.result) / len(listener.result)

    def calc_cohesion(self):
        listener = Cohesion(self.common_listener.classes)
        self.walker.walk(listener, self.parse_tree)
        return sum(listener.result) / len(listener.result)

    def calc_design_size(self):
        listener = DesignSize()
        self.walker.walk(listener, self.parse_tree)
        return listener.result

    def calc_abstraction(self):
        listener = Abstraction()
        self.walker.walk(listener, self.parse_tree)
        return listener.result

    def calc_encapsulation(self):
        listener = Encapsulation()
        self.walker.walk(listener, self.parse_tree)
        return listener.result

    def get_value(self):
        coupling = self.calc_coupling()
        cohesion = self.calc_cohesion()
        design_size = self.calc_design_size()
        abstraction = self.calc_abstraction()
        encapsulation = self.calc_encapsulation()


        print('Coupling: ' + str(coupling))
        print('Cohesion: ' + str(cohesion))

        # raise NotImplementedError()    # TODO: Calculate Understandability Formula
